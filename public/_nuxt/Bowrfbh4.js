var e={};const o="chainstart",t="Start of the Ethereum main chain",s="",a="",n={minGasLimit:{v:5e3,d:"Minimum the gas limit may ever be"},gasLimitBoundDivisor:{v:1024,d:"The bound divisor of the gas limit, used in update calculations"},maxRefundQuotient:{v:2,d:"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},r={base:{v:2,d:"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},tierStep:{v:[0,2,3,5,8,10,20],d:"Once per operation, for a selection of them"},exp:{v:10,d:"Base fee of the EXP opcode"},expByte:{v:10,d:"Times ceil(log256(exponent)) for the EXP instruction"},sha3:{v:30,d:"Base fee of the SHA3 opcode"},sha3Word:{v:6,d:"Once per word of the SHA3 operation's data"},sload:{v:50,d:"Base fee of the SLOAD opcode"},sstoreSet:{v:2e4,d:"Once per SSTORE operation if the zeroness changes from zero"},sstoreReset:{v:5e3,d:"Once per SSTORE operation if the zeroness does not change from zero"},sstoreRefund:{v:15e3,d:"Once per SSTORE operation if the zeroness changes to zero"},jumpdest:{v:1,d:"Base fee of the JUMPDEST opcode"},log:{v:375,d:"Base fee of the LOG opcode"},logData:{v:8,d:"Per byte in a LOG* operation's data"},logTopic:{v:375,d:"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},create:{v:32e3,d:"Base fee of the CREATE opcode"},call:{v:40,d:"Base fee of the CALL opcode"},callStipend:{v:2300,d:"Free gas given at beginning of call"},callValueTransfer:{v:9e3,d:"Paid for CALL when the value transfor is non-zero"},callNewAccount:{v:25e3,d:"Paid for CALL when the destination address didn't exist prior"},selfdestructRefund:{v:24e3,d:"Refunded following a selfdestruct operation"},memory:{v:3,d:"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},quadCoeffDiv:{v:512,d:"Divisor for the quadratic particle of the memory cost equation"},createData:{v:200,d:""},tx:{v:21e3,d:"Per transaction. NOTE: Not payable on data of calls between transactions"},txCreation:{v:32e3,d:"The cost of creating a contract via tx"},txDataZero:{v:4,d:"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},txDataNonZero:{v:68,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},copy:{v:3,d:"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},ecRecover:{v:3e3,d:""},sha256:{v:60,d:""},sha256Word:{v:12,d:""},ripemd160:{v:600,d:""},ripemd160Word:{v:120,d:""},identity:{v:15,d:""},identityWord:{v:3,d:""},stop:{v:0,d:"Base fee of the STOP opcode"},add:{v:3,d:"Base fee of the ADD opcode"},mul:{v:5,d:"Base fee of the MUL opcode"},sub:{v:3,d:"Base fee of the SUB opcode"},div:{v:5,d:"Base fee of the DIV opcode"},sdiv:{v:5,d:"Base fee of the SDIV opcode"},mod:{v:5,d:"Base fee of the MOD opcode"},smod:{v:5,d:"Base fee of the SMOD opcode"},addmod:{v:8,d:"Base fee of the ADDMOD opcode"},mulmod:{v:8,d:"Base fee of the MULMOD opcode"},signextend:{v:5,d:"Base fee of the SIGNEXTEND opcode"},lt:{v:3,d:"Base fee of the LT opcode"},gt:{v:3,d:"Base fee of the GT opcode"},slt:{v:3,d:"Base fee of the SLT opcode"},sgt:{v:3,d:"Base fee of the SGT opcode"},eq:{v:3,d:"Base fee of the EQ opcode"},iszero:{v:3,d:"Base fee of the ISZERO opcode"},and:{v:3,d:"Base fee of the AND opcode"},or:{v:3,d:"Base fee of the OR opcode"},xor:{v:3,d:"Base fee of the XOR opcode"},not:{v:3,d:"Base fee of the NOT opcode"},byte:{v:3,d:"Base fee of the BYTE opcode"},address:{v:2,d:"Base fee of the ADDRESS opcode"},balance:{v:20,d:"Base fee of the BALANCE opcode"},origin:{v:2,d:"Base fee of the ORIGIN opcode"},caller:{v:2,d:"Base fee of the CALLER opcode"},callvalue:{v:2,d:"Base fee of the CALLVALUE opcode"},calldataload:{v:3,d:"Base fee of the CALLDATALOAD opcode"},calldatasize:{v:2,d:"Base fee of the CALLDATASIZE opcode"},calldatacopy:{v:3,d:"Base fee of the CALLDATACOPY opcode"},codesize:{v:2,d:"Base fee of the CODESIZE opcode"},codecopy:{v:3,d:"Base fee of the CODECOPY opcode"},gasprice:{v:2,d:"Base fee of the GASPRICE opcode"},extcodesize:{v:20,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:20,d:"Base fee of the EXTCODECOPY opcode"},blockhash:{v:20,d:"Base fee of the BLOCKHASH opcode"},coinbase:{v:2,d:"Base fee of the COINBASE opcode"},timestamp:{v:2,d:"Base fee of the TIMESTAMP opcode"},number:{v:2,d:"Base fee of the NUMBER opcode"},difficulty:{v:2,d:"Base fee of the DIFFICULTY opcode"},gaslimit:{v:2,d:"Base fee of the GASLIMIT opcode"},pop:{v:2,d:"Base fee of the POP opcode"},mload:{v:3,d:"Base fee of the MLOAD opcode"},mstore:{v:3,d:"Base fee of the MSTORE opcode"},mstore8:{v:3,d:"Base fee of the MSTORE8 opcode"},sstore:{v:0,d:"Base fee of the SSTORE opcode"},jump:{v:8,d:"Base fee of the JUMP opcode"},jumpi:{v:10,d:"Base fee of the JUMPI opcode"},pc:{v:2,d:"Base fee of the PC opcode"},msize:{v:2,d:"Base fee of the MSIZE opcode"},gas:{v:2,d:"Base fee of the GAS opcode"},push:{v:3,d:"Base fee of the PUSH opcode"},dup:{v:3,d:"Base fee of the DUP opcode"},swap:{v:3,d:"Base fee of the SWAP opcode"},callcode:{v:40,d:"Base fee of the CALLCODE opcode"},return:{v:0,d:"Base fee of the RETURN opcode"},invalid:{v:0,d:"Base fee of the INVALID opcode"},selfdestruct:{v:0,d:"Base fee of the SELFDESTRUCT opcode"}},c={stackLimit:{v:1024,d:"Maximum size of VM stack allowed"},callCreateDepth:{v:1024,d:"Maximum depth of call/create stack"},maxExtraDataSize:{v:32,d:"Maximum size extra data may be after Genesis"}},i={minimumDifficulty:{v:131072,d:"The minimum that the difficulty may ever be"},difficultyBoundDivisor:{v:2048,d:"The bound divisor of the difficulty, used in the update calculations"},durationLimit:{v:13,d:"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},epochDuration:{v:3e4,d:"Duration between proof-of-work epochs"},timebombPeriod:{v:1e5,d:"Exponential difficulty timebomb period"},minerReward:{v:"5000000000000000000",d:"the amount a miner get rewarded for mining a block"},difficultyBombDelay:{v:0,d:"the amount of blocks to delay the difficulty bomb with"}},d={name:o,comment:t,url:s,status:a,gasConfig:n,gasPrices:r,vm:c,pow:i},f="homestead",p="Homestead hardfork with protocol and network changes",m="https://eips.ethereum.org/EIPS/eip-606",l="Final",u={},h={delegatecall:{v:40,d:"Base fee of the DELEGATECALL opcode"}},v={},g={},$={name:f,comment:p,url:m,status:l,gasConfig:u,gasPrices:h,vm:v,pow:g},E="dao",S="DAO rescue hardfork",B="https://eips.ethereum.org/EIPS/eip-779",b="Final",P={},O={},C={},T={},y={name:E,comment:S,url:B,status:b,gasConfig:P,gasPrices:O,vm:C,pow:T},R="tangerineWhistle",D="Hardfork with gas cost changes for IO-heavy operations",w="https://eips.ethereum.org/EIPS/eip-608",A="Final",L={},I={sload:{v:200,d:"Once per SLOAD operation"},call:{v:700,d:"Once per CALL operation & message call transaction"},extcodesize:{v:700,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:700,d:"Base fee of the EXTCODECOPY opcode"},balance:{v:400,d:"Base fee of the BALANCE opcode"},delegatecall:{v:700,d:"Base fee of the DELEGATECALL opcode"},callcode:{v:700,d:"Base fee of the CALLCODE opcode"},selfdestruct:{v:5e3,d:"Base fee of the SELFDESTRUCT opcode"}},G={},x={},k={name:R,comment:D,url:w,status:A,gasConfig:L,gasPrices:I,vm:G,pow:x},z="spuriousDragon",N="HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",M="https://eips.ethereum.org/EIPS/eip-607",F="Final",q={},H={expByte:{v:50,d:"Times ceil(log256(exponent)) for the EXP instruction"}},U={maxCodeSize:{v:24576,d:"Maximum length of contract code"}},X={},Z={name:z,comment:N,url:M,status:F,gasConfig:q,gasPrices:H,vm:U,pow:X},W="byzantium",Y="Hardfork with new precompiles, instructions and other protocol changes",V="https://eips.ethereum.org/EIPS/eip-609",J="Final",j={},_={modexpGquaddivisor:{v:20,d:"Gquaddivisor from modexp precompile for gas calculation"},ecAdd:{v:500,d:"Gas costs for curve addition precompile"},ecMul:{v:4e4,d:"Gas costs for curve multiplication precompile"},ecPairing:{v:1e5,d:"Base gas costs for curve pairing precompile"},ecPairingWord:{v:8e4,d:"Gas costs regarding curve pairing precompile input length"},revert:{v:0,d:"Base fee of the REVERT opcode"},staticcall:{v:700,d:"Base fee of the STATICCALL opcode"},returndatasize:{v:2,d:"Base fee of the RETURNDATASIZE opcode"},returndatacopy:{v:3,d:"Base fee of the RETURNDATACOPY opcode"}},Q={},K={minerReward:{v:"3000000000000000000",d:"the amount a miner get rewarded for mining a block"},difficultyBombDelay:{v:3e6,d:"the amount of blocks to delay the difficulty bomb with"}},ee={name:W,comment:Y,url:V,status:J,gasConfig:j,gasPrices:_,vm:Q,pow:K},oe="constantinople",te="Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",se="https://eips.ethereum.org/EIPS/eip-1013",ae="Final",ne={},re={netSstoreNoopGas:{v:200,d:"Once per SSTORE operation if the value doesn't change"},netSstoreInitGas:{v:2e4,d:"Once per SSTORE operation from clean zero"},netSstoreCleanGas:{v:5e3,d:"Once per SSTORE operation from clean non-zero"},netSstoreDirtyGas:{v:200,d:"Once per SSTORE operation from dirty"},netSstoreClearRefund:{v:15e3,d:"Once per SSTORE operation for clearing an originally existing storage slot"},netSstoreResetRefund:{v:4800,d:"Once per SSTORE operation for resetting to the original non-zero value"},netSstoreResetClearRefund:{v:19800,d:"Once per SSTORE operation for resetting to the original zero value"},shl:{v:3,d:"Base fee of the SHL opcode"},shr:{v:3,d:"Base fee of the SHR opcode"},sar:{v:3,d:"Base fee of the SAR opcode"},extcodehash:{v:400,d:"Base fee of the EXTCODEHASH opcode"},create2:{v:32e3,d:"Base fee of the CREATE2 opcode"}},ce={},ie={minerReward:{v:"2000000000000000000",d:"The amount a miner gets rewarded for mining a block"},difficultyBombDelay:{v:5e6,d:"the amount of blocks to delay the difficulty bomb with"}},de={name:oe,comment:te,url:se,status:ae,gasConfig:ne,gasPrices:re,vm:ce,pow:ie},fe="petersburg",pe="Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",me="https://eips.ethereum.org/EIPS/eip-1716",le="Final",ue={},he={netSstoreNoopGas:{v:null,d:"Removed along EIP-1283"},netSstoreInitGas:{v:null,d:"Removed along EIP-1283"},netSstoreCleanGas:{v:null,d:"Removed along EIP-1283"},netSstoreDirtyGas:{v:null,d:"Removed along EIP-1283"},netSstoreClearRefund:{v:null,d:"Removed along EIP-1283"},netSstoreResetRefund:{v:null,d:"Removed along EIP-1283"},netSstoreResetClearRefund:{v:null,d:"Removed along EIP-1283"}},ve={},ge={},$e={name:fe,comment:pe,url:me,status:le,gasConfig:ue,gasPrices:he,vm:ve,pow:ge},Ee="istanbul",Se="HF targeted for December 2019 following the Constantinople/Petersburg HF",Be="https://eips.ethereum.org/EIPS/eip-1679",be="Final",Pe={},Oe={blake2Round:{v:1,d:"Gas cost per round for the Blake2 F precompile"},ecAdd:{v:150,d:"Gas costs for curve addition precompile"},ecMul:{v:6e3,d:"Gas costs for curve multiplication precompile"},ecPairing:{v:45e3,d:"Base gas costs for curve pairing precompile"},ecPairingWord:{v:34e3,d:"Gas costs regarding curve pairing precompile input length"},txDataNonZero:{v:16,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},sstoreSentryGasEIP2200:{v:2300,d:"Minimum gas required to be present for an SSTORE call, not consumed"},sstoreNoopGasEIP2200:{v:800,d:"Once per SSTORE operation if the value doesn't change"},sstoreDirtyGasEIP2200:{v:800,d:"Once per SSTORE operation if a dirty value is changed"},sstoreInitGasEIP2200:{v:2e4,d:"Once per SSTORE operation from clean zero to non-zero"},sstoreInitRefundEIP2200:{v:19200,d:"Once per SSTORE operation for resetting to the original zero value"},sstoreCleanGasEIP2200:{v:5e3,d:"Once per SSTORE operation from clean non-zero to something else"},sstoreCleanRefundEIP2200:{v:4200,d:"Once per SSTORE operation for resetting to the original non-zero value"},sstoreClearRefundEIP2200:{v:15e3,d:"Once per SSTORE operation for clearing an originally existing storage slot"},balance:{v:700,d:"Base fee of the BALANCE opcode"},extcodehash:{v:700,d:"Base fee of the EXTCODEHASH opcode"},chainid:{v:2,d:"Base fee of the CHAINID opcode"},selfbalance:{v:5,d:"Base fee of the SELFBALANCE opcode"},sload:{v:800,d:"Base fee of the SLOAD opcode"}},Ce={},Te={},ye={name:Ee,comment:Se,url:Be,status:be,gasConfig:Pe,gasPrices:Oe,vm:Ce,pow:Te},Re="muirGlacier",De="HF to delay the difficulty bomb",we="https://eips.ethereum.org/EIPS/eip-2384",Ae="Final",Le={},Ie={},Ge={},xe={difficultyBombDelay:{v:9e6,d:"the amount of blocks to delay the difficulty bomb with"}},ke={name:Re,comment:De,url:we,status:Ae,gasConfig:Le,gasPrices:Ie,vm:Ge,pow:xe},ze="berlin",Ne="HF targeted for July 2020 following the Muir Glacier HF",Me="https://eips.ethereum.org/EIPS/eip-2070",Fe="Final",qe=[2565,2929,2718,2930],He={name:ze,comment:Ne,url:Me,status:Fe,eips:qe},Ue="london",Xe="HF targeted for July 2021 following the Berlin fork",Ze="https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",We="Final",Ye=[1559,3198,3529,3541],Ve={name:Ue,comment:Xe,url:Ze,status:We,eips:Ye},Je="shanghai",je="Next feature hardfork after the merge hardfork",_e="https://github.com/ethereum/pm/issues/356",Qe="Pre-Draft",Ke=[],eo={name:Je,comment:je,url:_e,status:Qe,eips:Ke},oo="arrowGlacier",to="HF to delay the difficulty bomb",so="https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",ao="Final",no=[4345],ro={},co={},io={},fo={},po={name:oo,comment:to,url:so,status:ao,eips:no,gasConfig:ro,gasPrices:co,vm:io,pow:fo},mo="grayGlacier",lo="Delaying the difficulty bomb to Mid September 2022",uo="https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",ho="Draft",vo=[5133],go={},$o={},Eo={},So={},Bo={name:mo,comment:lo,url:uo,status:ho,eips:vo,gasConfig:go,gasPrices:$o,vm:Eo,pow:So},bo="mergeForkIdTransition",Po="Pre-merge hardfork to fork off non-upgraded clients",Oo="https://eips.ethereum.org/EIPS/eip-3675",Co="Draft",To=[],yo={name:bo,comment:Po,url:Oo,status:Co,eips:To},Ro="merge",Do="Hardfork to upgrade the consensus mechanism to Proof-of-Stake",wo="https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",Ao="Draft",Lo={type:"pos",algorithm:"casper",casper:{}},Io=[3675,4399],Go={name:Ro,comment:Do,url:wo,status:Ao,consensus:Lo,eips:Io};Object.defineProperty(e,"__esModule",{value:!0});e.hardforks=void 0;e.hardforks=[["chainstart",d],["homestead",$],["dao",y],["tangerineWhistle",k],["spuriousDragon",Z],["byzantium",ee],["constantinople",de],["petersburg",$e],["istanbul",ye],["muirGlacier",ke],["berlin",He],["london",Ve],["shanghai",eo],["arrowGlacier",po],["grayGlacier",Bo],["mergeForkIdTransition",yo],["merge",Go]];export{e as h};
